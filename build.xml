<?xml version="1.0" encoding="UTF-8"?>
<project name="RandR" default="build" basedir=".">
	<property name="props" value="build.properties"/>
	<property file="${props}"/>
	<property name="secret" value="secret.properties"/>
	<property file="${secret}"/>
	<!-- Preexisitng Directories -->
	<property name="tools" location="tools"/>
		<property name="github" location="${tools}/github"/>
	<property name="lib" location="lib"/>
	<property name="src" location="src"/>
		<property name="java" location="${src}/java"/>
		<property name="net" location="${src}/net"/>
		<property name="php" location="${src}/php"/>
	<property name="build" location="build"/>
		<property name="build.java" location="${build}/java"/>
		<property name="build.net" location="${build}/net"/>
		<property name="build.php" location="${build}/php"/>
	<property name="dist" location="dist"/>
		<property name="jarfile" location="${dist}/${github.repo}.jar"/>
		
	<condition property="version.do">
		<istrue value="${build.doversion}"/>
	</condition>
	<condition property="version.default">
		<isfalse value="${build.doversion}"/>
	</condition>

	<fileset id="github-anttasks.jars" dir="${github}/lib">
		<include name="**/*.jar"/>
	</fileset>
	<path id="github-anttasks.classpath">
		<fileset refid="github-anttasks.jars"/>
		<pathelement location="."/>
		<fileset dir="${github}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<taskdef name="github.createrelease" classname="com.github.api.CreateRelease" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />
	<taskdef name="github.uploadasset" classname="com.github.api.UploadAsset" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />
	<taskdef name="github.fullrelease" classname="com.github.api.FullRelease" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />

	<target name="compile.base64" description="Compile Base64 for versions of ant below 1.7">
		<javac srcdir="${google}" destdir="${google}"
			source="1.4" target="1.4"
			failonerror="true"
	       	includes="**/*.java">
		</javac>
	</target>

	<fileset id="lib.jars" dir="${lib}">
		<include name="**/*.jar"/>
	</fileset>
	<path id="lib.path">
		<fileset refid="lib.jars"/>
	</path>

	<target name="prepare" description="Create build dirs">
		<mkdir dir="${build}"/>
			<mkdir dir="${build.java}"/>
			<mkdir dir="${build.net}"/>
			<mkdir dir="${build.php}"/>
	</target>

	<target name="build" description="Increment build number and date">
		<propertyfile file="${props}">
			<entry key="build.date" type="date" value="now"/>
		</propertyfile>
		<buildnumber file="${props}"/>
	</target>
	
	<target name="java" description="Compile Java Code" depends="prepare">
		<javac srcdir="${src}" destdir="${build.java}"
			source="${build.jvm}" target="${build.jvm}"
			failonerror="true"
			includes="**/*.*"
			classpathref="lib.path">
		</javac>
		<jar jarfile="${jarfile}" basedir="${build.java}">
		</jar>
	</target>
	
	<target name="net" description="Compile .NET Code" depends="prepare">

	</target>

	<target name="php" description="Compile PHP Code" depends="prepare">
		<copy todir="${build.php}">
			<fileset dir="${php}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
			<filterset>
				<filter token="RandRVersion" value="${new.version}"/>
			</filterset>
		</copy>
	</target>

	<target name="all" description="Create All" depends="build,java,net,php">
		<!-- At the moment alltemplates requires nothing else -->
	</target>

	<target name="version.input" depends="all" if="version.do">
		<input
			message="Please input a new version. Current version ${build.version}"
			addproperty="new.version"
		 />
		<propertyfile file="${props}">
			<entry key="build.version" value="${new.version}"/>
		</propertyfile>
		<condition property="version.default">
			<equals arg1="${new.doversion}" arg2=""/>
		</condition>
	</target>
	<target name="version.default" depends="version.input">
		<property name="new.version" value="${build.version}"/>
	</target>
	<target name="version" depends="version.input,version.default" description="Prompt user to enter new version">
		<!-- At the moment version requires nothing else -->
	</target>

	<target name="release" depends="version" description="Create a new release of libraries">
		<property name="java.zip" value="${github.repo}-java-${new.version}.zip"/>
		<property name="java.zip.full" location="${dist}/${java.zip}"/>
		<zip destfile="${java.zip.full}">
			<fileset dir="${dist}">
				<include name="${github.repo}.jar"/>
			</fileset>
		</zip>
		<!--
		<property name="net.zip" value="${github.repo}-net-${new.version}.zip"/>
		<property name="net.zip.full" location="${dist}/${net.zip}"/>
		<zip destfile="${net.zip.full}">

		</zip>
		-->
		<property name="php.zip" value="${github.repo}-php-${new.version}.zip"/>
		<property name="php.zip.full" location="${dist}/${php.zip}"/>
		<zip destfile="${php.zip.full}">
			<fileset dir="${build.php}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
		<!--
		<property name="source.zip" value="${github.repo}-source-${new.version}.zip"/>
		<property name="source.zip.full" location="${dist}/${source.zip}"/>
		<move file="secret.properties" tofile="secret.temp.properties"/>
		<copy file="secret.example.properties" tofile="secret.properties"/>
		<zip destfile="${source.zip.full}">
			<fileset dir=".">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
				<exclude name="**/build/**"/>
				<exclude name="secret.temp.properties"/>
			</fileset>
		</zip>
		<delete file="secret.properties"/>
		<move file="secret.temp.properties" tofile="secret.properties"/>
		-->
	</target>

	<target name="github" description="Deploy All To GitHub" depends="release">
		<github.fullrelease
			repouser="${github.repouser}"
			repo="${github.repo}"
			tokenuser="${github.tokenuser}"
			token="${github.token}"
			tag="${new.version}">
			<fileset dir="${dist}" casesensitive="yes">
				<include name="${php.zip}"/>
				<include name="${java.zip}"/>
			</fileset>
		</github.fullrelease>
	</target>

	<target name="deploy" description="Deploy to GitHub" depends="github">
		<!-- At the moment deploy requires nothing else -->
	</target>

	<target name="clean" description="Remove build and dist directories">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>